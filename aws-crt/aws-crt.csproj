<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <PlatformTarget Condition="$(PlatformTarget) == '' AND $(OS) == 'Windows_NT' AND ($(CMakeGenerator) == 'Visual Studio 14 2015' OR $(CMakeGenerator) == 'Visual Studio 15 2017')">x86</PlatformTarget>
    <PlatformTarget Condition="$(PlatformTarget) == ''">x64</PlatformTarget>
    <RootNamespace>Aws.CRT</RootNamespace>

    <BuildNativeLibrary>true</BuildNativeLibrary>

    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <PackageOutputPath>$(ProjectDir)../packages</PackageOutputPath>
    <IncludeSymbols>True</IncludeSymbols>

    <PackageId>AWSCRT</PackageId>
    <Title>AWS CRT - AWS Common Runtime</Title>
    <Version>0.2.4</Version>
    <Authors>aws-sdk-common-runtime</Authors>
    <Company>Amazon</Company>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PackageTags>AWS,native,Amazon</PackageTags>
    <RepositoryUrl>https://github.com/awslabs/aws-crt-dotnet.git</RepositoryUrl>
    <Copyright>Amazon Web Services, 2019</Copyright>
    <Description>AWS Common Runtime bindings for .NET</Description>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="CMake" Version="3.5.2" />
    <PackageReference Include="System.Runtime.Loader" Version="4.3.0" />
    <PackageReference Include="Microsoft.CSharp" Version="4.5.0" />
  </ItemGroup>

  <Target Name="BuildNativeLibrary" 
    Condition="$(BuildNativeLibrary) == 'true'"
    BeforeTargets="PrepareForBuild" 
    Outputs="$(ProjectDir)../build/CMakeCache.txt">
    <PropertyGroup>
      <CMakeGenerator Condition="$(CMakeGenerator) == '' AND $(OS) == 'Windows_NT' AND $(PlatformTarget) == 'x64'">Visual Studio 15 2017 Win64</CMakeGenerator>
      <CMakeGenerator Condition="$(CMakeGenerator) == '' AND $(OS) == 'Windows_NT' AND $(PlatformTarget) == 'x86'">Visual Studio 15 2017</CMakeGenerator>
      <CMakeGenerator Condition="$(CMakeGenerator) == '' AND $(OS) == 'Unix'">Unix Makefiles</CMakeGenerator>
      <CMakeBinaries Condition="$(OS) == 'Windows_NT' AND $(CODEBUILD_SRC_DIR) != ''">c:/build-$(MSBuildProjectName)</CMakeBinaries>
      <CMakeBinaries Condition="$(OS) == 'Windows_NT' AND $(CODEBUILD_SRC_DIR) == ''">$(ProjectDir)../build</CMakeBinaries>
      <CMakeBinaries Condition="$(OS) != 'Windows_NT'">$(ProjectDir)../build</CMakeBinaries>
      <CMakeConfig Condition="$(Configuration) == 'Debug'">Debug</CMakeConfig>
      <CMakeConfig Condition="$(CMakeConfig) == ''">RelWithDebInfo</CMakeConfig>
    </PropertyGroup>
    <MakeDir Directories="$(CMakeBinaries)" />
    <Message Text="Configuring CMake project" Importance="high"/>
    <Exec Command="cmake -G&quot;$(CMakeGenerator)&quot; -DCMAKE_BUILD_TYPE=$(CMakeConfig) -DCMAKE_PREFIX_PATH=$(CMakeBinaries)/deps/install -DCMAKE_EXPORT_COMPILE_COMMANDS=ON $(ProjectDir)../native" WorkingDirectory="$(CMakeBinaries)" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
    </Exec>
    <Message Text="Building native library" Importance="high"/>
    <Exec Command="cmake --build . --config $(CMakeConfig)" WorkingDirectory="$(CMakeBinaries)" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
    </Exec>
    <ItemGroup>
      <EmbeddedResource Include="$(CMakeBinaries)/lib/*aws-crt-dotnet*" Exclude="*.ilk" />
    </ItemGroup>
    <Message Text="Embedded library: %(EmbeddedResource.Identity)" Importance="High"/>
  </Target>
</Project>
